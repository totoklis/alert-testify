import { CollateralAdjust } from '../model/collateralAdjust';
import { CollateralAdjustRes } from '../model/collateralAdjustRes';
import { CollateralCurrentRate } from '../model/collateralCurrentRate';
import { CollateralFixRate } from '../model/collateralFixRate';
import { CollateralLtv } from '../model/collateralLtv';
import { CreateMultiCollateralOrder } from '../model/createMultiCollateralOrder';
import { CurrencyQuota } from '../model/currencyQuota';
import { MultiCollateralCurrency } from '../model/multiCollateralCurrency';
import { MultiCollateralOrder } from '../model/multiCollateralOrder';
import { MultiCollateralRecord } from '../model/multiCollateralRecord';
import { MultiRepayRecord } from '../model/multiRepayRecord';
import { MultiRepayResp } from '../model/multiRepayResp';
import { OrderResp } from '../model/orderResp';
import { RepayMultiLoan } from '../model/repayMultiLoan';
import { ApiClient } from './apiClient';
import { AxiosResponse } from 'axios';
export declare class MultiCollateralLoanApi {
    protected client: ApiClient;
    constructor(client?: ApiClient);
    listMultiCollateralOrders(opts: {
        page?: number;
        limit?: number;
        sort?: string;
        orderType?: string;
    }): Promise<{
        response: AxiosResponse;
        body: Array<MultiCollateralOrder>;
    }>;
    createMultiCollateral(createMultiCollateralOrder: CreateMultiCollateralOrder): Promise<{
        response: AxiosResponse;
        body: OrderResp;
    }>;
    getMultiCollateralOrderDetail(orderId: string): Promise<{
        response: AxiosResponse;
        body: MultiCollateralOrder;
    }>;
    listMultiRepayRecords(type: string, opts: {
        borrowCurrency?: string;
        page?: number;
        limit?: number;
        from?: number;
        to?: number;
    }): Promise<{
        response: AxiosResponse;
        body: Array<MultiRepayRecord>;
    }>;
    repayMultiCollateralLoan(repayMultiLoan: RepayMultiLoan): Promise<{
        response: AxiosResponse;
        body: MultiRepayResp;
    }>;
    listMultiCollateralRecords(opts: {
        page?: number;
        limit?: number;
        from?: number;
        to?: number;
        collateralCurrency?: string;
    }): Promise<{
        response: AxiosResponse;
        body: Array<MultiCollateralRecord>;
    }>;
    operateMultiCollateral(collateralAdjust: CollateralAdjust): Promise<{
        response: AxiosResponse;
        body: CollateralAdjustRes;
    }>;
    listUserCurrencyQuota(type: string, currency: string): Promise<{
        response: AxiosResponse;
        body: Array<CurrencyQuota>;
    }>;
    listMultiCollateralCurrencies(): Promise<{
        response: AxiosResponse;
        body: MultiCollateralCurrency;
    }>;
    getMultiCollateralLtv(): Promise<{
        response: AxiosResponse;
        body: CollateralLtv;
    }>;
    getMultiCollateralFixRate(): Promise<{
        response: AxiosResponse;
        body: Array<CollateralFixRate>;
    }>;
    getMultiCollateralCurrentRate(currencies: Array<string>, opts: {
        vipLevel?: string;
    }): Promise<{
        response: AxiosResponse;
        body: Array<CollateralCurrentRate>;
    }>;
}
