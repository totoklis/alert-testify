import { SubAccount } from '../model/subAccount';
import { SubAccountKey } from '../model/subAccountKey';
import { SubUserMode } from '../model/subUserMode';
import { ApiClient } from './apiClient';
import { AxiosResponse } from 'axios';
export declare class SubAccountApi {
    protected client: ApiClient;
    constructor(client?: ApiClient);
    listSubAccounts(opts: {
        type?: string;
    }): Promise<{
        response: AxiosResponse;
        body: Array<SubAccount>;
    }>;
    createSubAccounts(subAccount: SubAccount): Promise<{
        response: AxiosResponse;
        body: SubAccount;
    }>;
    getSubAccount(userId: number): Promise<{
        response: AxiosResponse;
        body: SubAccount;
    }>;
    listSubAccountKeys(userId: number): Promise<{
        response: AxiosResponse;
        body: Array<SubAccountKey>;
    }>;
    createSubAccountKeys(userId: number, subAccountKey: SubAccountKey): Promise<{
        response: AxiosResponse;
        body: Array<SubAccountKey>;
    }>;
    getSubAccountKey(userId: number, key: string): Promise<{
        response: AxiosResponse;
        body: SubAccountKey;
    }>;
    updateSubAccountKeys(userId: number, key: string, subAccountKey: SubAccountKey): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    deleteSubAccountKeys(userId: number, key: string): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    lockSubAccount(userId: number): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    unlockSubAccount(userId: number): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    listUnifiedMode(): Promise<{
        response: AxiosResponse;
        body: Array<SubUserMode>;
    }>;
}
