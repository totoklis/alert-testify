import { AgencyCommissionHistory } from '../model/agencyCommissionHistory';
import { AgencyTransactionHistory } from '../model/agencyTransactionHistory';
import { BrokerCommission } from '../model/brokerCommission';
import { BrokerTransaction } from '../model/brokerTransaction';
import { PartnerCommissionHistory } from '../model/partnerCommissionHistory';
import { PartnerSubList } from '../model/partnerSubList';
import { PartnerTransactionHistory } from '../model/partnerTransactionHistory';
import { RebateUserInfo } from '../model/rebateUserInfo';
import { UserSubRelation } from '../model/userSubRelation';
import { ApiClient } from './apiClient';
import { AxiosResponse } from 'axios';
export declare class RebateApi {
    protected client: ApiClient;
    constructor(client?: ApiClient);
    agencyTransactionHistory(opts: {
        currencyPair?: string;
        userId?: number;
        from?: number;
        to?: number;
        limit?: number;
        offset?: number;
    }): Promise<{
        response: AxiosResponse;
        body: Array<AgencyTransactionHistory>;
    }>;
    agencyCommissionsHistory(opts: {
        currency?: string;
        userId?: number;
        from?: number;
        to?: number;
        limit?: number;
        offset?: number;
    }): Promise<{
        response: AxiosResponse;
        body: Array<AgencyCommissionHistory>;
    }>;
    partnerTransactionHistory(opts: {
        currencyPair?: string;
        userId?: number;
        from?: number;
        to?: number;
        limit?: number;
        offset?: number;
    }): Promise<{
        response: AxiosResponse;
        body: PartnerTransactionHistory;
    }>;
    partnerCommissionsHistory(opts: {
        currency?: string;
        userId?: number;
        from?: number;
        to?: number;
        limit?: number;
        offset?: number;
    }): Promise<{
        response: AxiosResponse;
        body: PartnerCommissionHistory;
    }>;
    partnerSubList(opts: {
        userId?: number;
        limit?: number;
        offset?: number;
    }): Promise<{
        response: AxiosResponse;
        body: PartnerSubList;
    }>;
    rebateBrokerCommissionHistory(opts: {
        limit?: number;
        offset?: number;
        userId?: number;
        from?: number;
        to?: number;
    }): Promise<{
        response: AxiosResponse;
        body: Array<BrokerCommission>;
    }>;
    rebateBrokerTransactionHistory(opts: {
        limit?: number;
        offset?: number;
        userId?: number;
        from?: number;
        to?: number;
    }): Promise<{
        response: AxiosResponse;
        body: Array<BrokerTransaction>;
    }>;
    rebateUserInfo(): Promise<{
        response: AxiosResponse;
        body: Array<RebateUserInfo>;
    }>;
    userSubRelation(userIdList: string): Promise<{
        response: AxiosResponse;
        body: UserSubRelation;
    }>;
}
