"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubCrossMarginAccount = void 0;
class SubCrossMarginAccount {
    static getAttributeTypeMap() {
        return SubCrossMarginAccount.attributeTypeMap;
    }
}
exports.SubCrossMarginAccount = SubCrossMarginAccount;
SubCrossMarginAccount.discriminator = undefined;
SubCrossMarginAccount.attributeTypeMap = [
    {
        name: 'userId',
        baseName: 'user_id',
        type: 'number',
    },
    {
        name: 'locked',
        baseName: 'locked',
        type: 'boolean',
    },
    {
        name: 'balances',
        baseName: 'balances',
        type: '{ [key: string]: CrossMarginBalance1; }',
    },
    {
        name: 'total',
        baseName: 'total',
        type: 'string',
    },
    {
        name: 'borrowed',
        baseName: 'borrowed',
        type: 'string',
    },
    {
        name: 'borrowedNet',
        baseName: 'borrowed_net',
        type: 'string',
    },
    {
        name: 'net',
        baseName: 'net',
        type: 'string',
    },
    {
        name: 'leverage',
        baseName: 'leverage',
        type: 'string',
    },
    {
        name: 'interest',
        baseName: 'interest',
        type: 'string',
    },
    {
        name: 'risk',
        baseName: 'risk',
        type: 'string',
    },
    {
        name: 'totalInitialMargin',
        baseName: 'total_initial_margin',
        type: 'string',
    },
    {
        name: 'totalMarginBalance',
        baseName: 'total_margin_balance',
        type: 'string',
    },
    {
        name: 'totalMaintenanceMargin',
        baseName: 'total_maintenance_margin',
        type: 'string',
    },
    {
        name: 'totalInitialMarginRate',
        baseName: 'total_initial_margin_rate',
        type: 'string',
    },
    {
        name: 'totalMaintenanceMarginRate',
        baseName: 'total_maintenance_margin_rate',
        type: 'string',
    },
    {
        name: 'totalAvailableMargin',
        baseName: 'total_available_margin',
        type: 'string',
    },
];
