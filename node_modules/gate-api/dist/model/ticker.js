"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Ticker = void 0;
class Ticker {
    static getAttributeTypeMap() {
        return Ticker.attributeTypeMap;
    }
}
exports.Ticker = Ticker;
Ticker.discriminator = undefined;
Ticker.attributeTypeMap = [
    {
        name: 'currencyPair',
        baseName: 'currency_pair',
        type: 'string',
    },
    {
        name: 'last',
        baseName: 'last',
        type: 'string',
    },
    {
        name: 'lowestAsk',
        baseName: 'lowest_ask',
        type: 'string',
    },
    {
        name: 'lowestSize',
        baseName: 'lowest_size',
        type: 'string',
    },
    {
        name: 'highestBid',
        baseName: 'highest_bid',
        type: 'string',
    },
    {
        name: 'highestSize',
        baseName: 'highest_size',
        type: 'string',
    },
    {
        name: 'changePercentage',
        baseName: 'change_percentage',
        type: 'string',
    },
    {
        name: 'changeUtc0',
        baseName: 'change_utc0',
        type: 'string',
    },
    {
        name: 'changeUtc8',
        baseName: 'change_utc8',
        type: 'string',
    },
    {
        name: 'baseVolume',
        baseName: 'base_volume',
        type: 'string',
    },
    {
        name: 'quoteVolume',
        baseName: 'quote_volume',
        type: 'string',
    },
    {
        name: 'high24h',
        baseName: 'high_24h',
        type: 'string',
    },
    {
        name: 'low24h',
        baseName: 'low_24h',
        type: 'string',
    },
    {
        name: 'etfNetValue',
        baseName: 'etf_net_value',
        type: 'string',
    },
    {
        name: 'etfPreNetValue',
        baseName: 'etf_pre_net_value',
        type: 'string',
    },
    {
        name: 'etfPreTimestamp',
        baseName: 'etf_pre_timestamp',
        type: 'number',
    },
    {
        name: 'etfLeverage',
        baseName: 'etf_leverage',
        type: 'string',
    },
];
