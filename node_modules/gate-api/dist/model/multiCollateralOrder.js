"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultiCollateralOrder = void 0;
class MultiCollateralOrder {
    static getAttributeTypeMap() {
        return MultiCollateralOrder.attributeTypeMap;
    }
}
exports.MultiCollateralOrder = MultiCollateralOrder;
MultiCollateralOrder.discriminator = undefined;
MultiCollateralOrder.attributeTypeMap = [
    {
        name: 'orderId',
        baseName: 'order_id',
        type: 'string',
    },
    {
        name: 'orderType',
        baseName: 'order_type',
        type: 'string',
    },
    {
        name: 'fixedType',
        baseName: 'fixed_type',
        type: 'string',
    },
    {
        name: 'fixedRate',
        baseName: 'fixed_rate',
        type: 'string',
    },
    {
        name: 'expireTime',
        baseName: 'expire_time',
        type: 'number',
    },
    {
        name: 'autoRenew',
        baseName: 'auto_renew',
        type: 'boolean',
    },
    {
        name: 'autoRepay',
        baseName: 'auto_repay',
        type: 'boolean',
    },
    {
        name: 'currentLtv',
        baseName: 'current_ltv',
        type: 'string',
    },
    {
        name: 'status',
        baseName: 'status',
        type: 'string',
    },
    {
        name: 'borrowTime',
        baseName: 'borrow_time',
        type: 'number',
    },
    {
        name: 'totalLeftRepayUsdt',
        baseName: 'total_left_repay_usdt',
        type: 'string',
    },
    {
        name: 'totalLeftCollateralUsdt',
        baseName: 'total_left_collateral_usdt',
        type: 'string',
    },
    {
        name: 'borrowCurrencies',
        baseName: 'borrow_currencies',
        type: 'Array<BorrowCurrencyInfo>',
    },
    {
        name: 'collateralCurrencies',
        baseName: 'collateral_currencies',
        type: 'Array<CollateralCurrencyInfo>',
    },
];
