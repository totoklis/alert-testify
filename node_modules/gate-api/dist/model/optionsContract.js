"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OptionsContract = void 0;
class OptionsContract {
    static getAttributeTypeMap() {
        return OptionsContract.attributeTypeMap;
    }
}
exports.OptionsContract = OptionsContract;
OptionsContract.discriminator = undefined;
OptionsContract.attributeTypeMap = [
    {
        name: 'name',
        baseName: 'name',
        type: 'string',
    },
    {
        name: 'tag',
        baseName: 'tag',
        type: 'string',
    },
    {
        name: 'createTime',
        baseName: 'create_time',
        type: 'number',
    },
    {
        name: 'expirationTime',
        baseName: 'expiration_time',
        type: 'number',
    },
    {
        name: 'isCall',
        baseName: 'is_call',
        type: 'boolean',
    },
    {
        name: 'multiplier',
        baseName: 'multiplier',
        type: 'string',
    },
    {
        name: 'underlying',
        baseName: 'underlying',
        type: 'string',
    },
    {
        name: 'underlyingPrice',
        baseName: 'underlying_price',
        type: 'string',
    },
    {
        name: 'lastPrice',
        baseName: 'last_price',
        type: 'string',
    },
    {
        name: 'markPrice',
        baseName: 'mark_price',
        type: 'string',
    },
    {
        name: 'indexPrice',
        baseName: 'index_price',
        type: 'string',
    },
    {
        name: 'makerFeeRate',
        baseName: 'maker_fee_rate',
        type: 'string',
    },
    {
        name: 'takerFeeRate',
        baseName: 'taker_fee_rate',
        type: 'string',
    },
    {
        name: 'orderPriceRound',
        baseName: 'order_price_round',
        type: 'string',
    },
    {
        name: 'markPriceRound',
        baseName: 'mark_price_round',
        type: 'string',
    },
    {
        name: 'orderSizeMin',
        baseName: 'order_size_min',
        type: 'number',
    },
    {
        name: 'orderSizeMax',
        baseName: 'order_size_max',
        type: 'number',
    },
    {
        name: 'orderPriceDeviate',
        baseName: 'order_price_deviate',
        type: 'string',
    },
    {
        name: 'refDiscountRate',
        baseName: 'ref_discount_rate',
        type: 'string',
    },
    {
        name: 'refRebateRate',
        baseName: 'ref_rebate_rate',
        type: 'string',
    },
    {
        name: 'orderbookId',
        baseName: 'orderbook_id',
        type: 'number',
    },
    {
        name: 'tradeId',
        baseName: 'trade_id',
        type: 'number',
    },
    {
        name: 'tradeSize',
        baseName: 'trade_size',
        type: 'number',
    },
    {
        name: 'positionSize',
        baseName: 'position_size',
        type: 'number',
    },
    {
        name: 'ordersLimit',
        baseName: 'orders_limit',
        type: 'number',
    },
];
